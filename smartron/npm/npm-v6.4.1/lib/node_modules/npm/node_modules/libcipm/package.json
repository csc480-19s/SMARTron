{
  "_from": "libcipm@2.0.2",
  "_id": "libcipm@2.0.2",
  "_inBundle": false,
  "_integrity": "sha512-9uZ6/LAflVEijksTRq/RX0e+pGA4mr8tND9Cmk2JMg7j2fFUBrs8PpFX2DOAJR/XoxPzz+5h8bkWmtIYLunKAg==",
  "_location": "/npm/libcipm",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "libcipm",
    "fetchSpec": "2.0.2",
    "name": "libcipm",
    "raw": "libcipm@2.0.2",
    "rawSpec": "2.0.2",
    "registry": true,
    "saveSpec": null,
    "type": "version"
  },
  "_requiredBy": [
    "#USER",
    "/npm"
  ],
  "_resolved": "https://registry.npmjs.org/libcipm/-/libcipm-2.0.2.tgz",
  "_shasum": "4f38c2b37acf2ec156936cef1cbf74636568fc7b",
  "_shrinkwrap": null,
  "_spec": "libcipm@2.0.2",
  "_where": "/Users/zkat/Documents/code/work/npm",
  "author": {
    "email": "kzm@sykosomatic.org",
    "name": "Kat March√°n"
  },
  "bugs": {
    "url": "https://github.com/zkat/cipm/issues"
  },
  "bundleDependencies": false,
  "config": {
    "nyc": {
      "exclude": [
        "node_modules/**",
        "test/**"
      ]
    }
  },
  "dependencies": {
    "bin-links": "^1.1.2",
    "bluebird": "^3.5.1",
    "find-npm-prefix": "^1.0.2",
    "graceful-fs": "^4.1.11",
    "lock-verify": "^2.0.2",
    "mkdirp": "^0.5.1",
    "npm-lifecycle": "^2.0.3",
    "npm-logical-tree": "^1.2.1",
    "npm-package-arg": "^6.1.0",
    "pacote": "^8.1.6",
    "protoduck": "^5.0.0",
    "read-package-json": "^2.0.13",
    "rimraf": "^2.6.2",
    "worker-farm": "^1.6.0"
  },
  "deprecated": false,
  "description": "programmatic API for cipm: a ci-oriented package installer for npm",
  "devDependencies": {
    "npmlog": "^4.1.2",
    "nyc": "^11.8.0",
    "require-inject": "^1.4.3",
    "standard": "^11.0.1",
    "standard-version": "^4.4.0",
    "tacks": "^1.2.6",
    "tap": "^12.0.1",
    "weallbehave": "^1.2.0",
    "weallcontribute": "^1.0.8"
  },
  "files": [
    "*.js",
    "lib"
  ],
  "homepage": "https://github.com/zkat/cipm#readme",
  "keywords": [
    "npm",
    "package manager",
    "caching",
    "downloader"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "libcipm",
  "optionalDependencies": {},
  "readme": "[![npm](https://img.shields.io/npm/v/libcipm.svg)](https://npm.im/libcipm) [![license](https://img.shields.io/npm/l/libcipm.svg)](https://npm.im/libcipm) [![Travis](https://img.shields.io/travis/zkat/cipm.svg)](https://travis-ci.org/zkat/cipm) [![AppVeyor](https://ci.appveyor.com/api/projects/status/github/zkat/cipm?svg=true)](https://ci.appveyor.com/project/zkat/cipm) [![Coverage Status](https://coveralls.io/repos/github/zkat/cipm/badge.svg?branch=latest)](https://coveralls.io/github/zkat/cipm?branch=latest)\n\n[`libcipm`](https://github.com/zkat/cipm) installs npm projects in a way that's\noptimized for continuous integration/deployment/etc scenarios. It gives up\nthe ability to build its own trees or install packages individually, as well\nas other user-oriented features, in exchange for speed, and being more strict\nabout project state.\n\nFor documentation about the associated command-line tool, see\n[`cipm`](https://npm.im/cipm).\n\n## Install\n\n`$ npm install libcipm`\n\n## Table of Contents\n\n* [Features](#features)\n* [Contributing](#contributing)\n* [API](#api)\n\n### Features\n\n* npm-compatible project installation\n* lifecycle script support\n* blazing fast\n* npm-compatible caching\n* errors if `package.json` and `package-lock.json` are out of sync, instead of fixing it like npm does. Essentially provides a `--frozen` install.\n\n### Contributing\n\nThe libcipm team enthusiastically welcomes contributions and project\nparticipation! There's a bunch of things you can do if you want to contribute!\nThe [Contributor Guide](CONTRIBUTING.md) has all the information you need for\neverything from reporting bugs to contributing entire new features. Please don't\nhesitate to jump in if you'd like to, or even ask us questions if something\nisn't clear.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/zkat/cipm.git"
  },
  "scripts": {
    "postrelease": "npm publish && git push --follow-tags",
    "prerelease": "npm t",
    "pretest": "standard",
    "release": "standard-version -s",
    "test": "tap -J --nyc-arg=--all --coverage test/specs",
    "update-coc": "weallbehave -o . && git add CODE_OF_CONDUCT.md && git commit -m 'docs(coc): updated CODE_OF_CONDUCT.md'",
    "update-contrib": "weallcontribute -o . && git add CONTRIBUTING.md && git commit -m 'docs(contributing): updated CONTRIBUTING.md'"
  },
  "version": "2.0.2"
}
